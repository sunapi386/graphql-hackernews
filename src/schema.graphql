# import Link, LinkSubscriptionPayload, LinkOrderByInput, Vote, VoteSubscriptionPayload from "./generated/prisma.graphql"

type User {
    id: ID!
    name: String!
    email: String!
    links: [Link!]!
}
#type Link {
#    id: ID!
#    description: String!
#    url: String!
#}
type AuthPayload {
    token: String
    user: User
}

type Feed {
    links: [Link!]!
    count: Int!
}

type Mutation {
    updateLink(id: ID!, url: String, description: String): Link
    deleteLink(id: ID!): Link
    post(url: String!, description: String!): Link!
    signup(email: String!, password: String!, name: String!): AuthPayload
    login(email: String!, password: String!): AuthPayload
    vote(linkId: ID!): Vote
    #    createUser(name: String!): User!
}

type Query {
    info: String!
    feed(filter: String, skip: Int, first: Int, orderBy: LinkOrderByInput): Feed
    link(id: ID!): Link!
    #    users: [User!]!
    #    user(id: ID!): User
}

type Subscription {
    newLink: LinkSubscriptionPayload
    newVote: VoteSubscriptionPayload
}
